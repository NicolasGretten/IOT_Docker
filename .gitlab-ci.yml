stages:
  - staging-pull
  - build
  - prod-pull
  - prod-address
  - prod-admin
  - prod-api
  - prod-boutique
  - prod-bill
  - prod-cart
  - prod-dashboard
  - prod-employee
  - prod-image
  - prod-mail
  - prod-order
  - prod-product
  - prod-store
  - prod-user
  - prod-payment
  - prod-vitrine
  - prod-rabbitmq
  - proxy
  - proxy-staging

staging-pull-job:
  stage: staging-pull
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - staging
  script:
    - echo "HELLO"
  after_script:
    - cd /home/admin/docker.collect.verything && sudo git reset --hard origin/staging && sudo git pull origin staging

build_a-job:
  stage: staging-address
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "address/*"
        - "address/*/*"
        - "address/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/address && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

build_b-job:
  stage: staging-admin
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "admin/*"
        - "admin/*/*"
        - "admin/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/admin && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_api:
  stage: staging-api
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "api/*"
        - "api/*/*"
        - "api/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/api && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_boutique:
  stage: staging-boutique
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "boutique/*"
        - "boutique/*/*"
        - "boutique/*/*/*"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/boutique && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_bill:
  stage: staging-bill
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "bill/*"
        - "bill/*/*"
        - "bill/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/bill && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d


staging-build_cart:
  stage: staging-cart
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "cart/*"
        - "cart/*/*"
        - "cart/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/cart && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_dashboard:
  stage: staging-dashboard
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "dashboard/*"
        - "dashboard/*/*"
        - "dashboard/*/*/*"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/dashboard && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_employee:
  stage: staging-employee
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "employee/*"
        - "employee/*/*"
        - "employee/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/employee && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_image:
  stage: staging-image
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "image/*"
        - "image/*/*"
        - "image/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/image && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_mail:
  stage: staging-mail
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "mail/*"
        - "mail/*/*"
        - "mail/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/mail && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_order:
  stage: staging-order
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "order/*"
        - "order/*/*"
        - "order/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/order && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_product:
  stage: staging-product
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "product/*"
        - "product/*/*"
        - "product/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/product && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_store:
  stage: staging-store
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "store/*"
        - "store/*/*"
        - "store/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/store && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_user:
  stage: staging-user
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "user/*"
        - "user/*/*"
        - "user/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/user && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-build_payment:
  stage: staging-payment
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "payment/*"
        - "payment/*/*"
        - "payment/*/*/*"
  environment:
    name: staging
    url: https://staging.api.collectandverything.fr
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/payment && sudo cp env/.env.staging .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d


staging-build_vitrine:
  stage: staging-vitrine
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "vitrine/*"
        - "vitrine/*/*"
        - "vitrine/*/*/*"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/vitrine && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

staging-rabbitmq-job:
  stage: staging-rabbitmq
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "rabbitmq/*"
        - "rabbitmq/*/*"
        - "rabbitmq/*/*/*"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/rabbitmq && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-pull-job:
  stage: prod-pull
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - echo "HELLO"
  after_script:
    - cd /home/admin/docker.collect.verything && sudo git reset --hard origin/production && sudo git pull origin production

prod-address-job:
  stage: prod-address
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "address/*"
        - "address/*/*"
        - "address/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/address && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-admin-job:
  stage: prod-admin
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "admin/*"
        - "admin/*/*"
        - "admin/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/admin && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-api-job:
  stage: prod-api
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "api/*"
        - "api/*/*"
        - "api/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/api && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-boutique-job:
  stage: prod-boutique
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "boutique/*"
        - "boutique/*/*"
        - "boutique/*/*/*"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/boutique && sudo echo "CI_COMMIT_BRANCH="$CI_COMMIT_BRANCH | sudo tee -a .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-bill-job:
  stage: prod-bill
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "bill/*"
        - "bill/*/*"
        - "bill/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/bill && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d


prod-cart-job:
  stage: prod-cart
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "cart/*"
        - "cart/*/*"
        - "cart/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/cart && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-dashboard-job:
  stage: prod-dashboard
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "dashboard/*"
        - "dashboard/*/*"
        - "dashboard/*/*/*"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/dashboard && sudo echo "CI_COMMIT_BRANCH="$CI_COMMIT_BRANCH | sudo tee -a .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-employee-job:
  stage: prod-employee
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "employee/*"
        - "employee/*/*"
        - "employee/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/employee && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-image-job:
  stage: prod-image
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "image/*"
        - "image/*/*"
        - "image/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/image && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-mail-job:
  stage: prod-mail
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "mail/*"
        - "mail/*/*"
        - "mail/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/mail && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-order-job:
  stage: prod-order
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "order/*"
        - "order/*/*"
        - "order/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/order && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-product-job:
  stage: prod-product
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "product/*"
        - "product/*/*"
        - "product/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/product && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-store-job:
  stage: prod-store
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "store/*"
        - "store/*/*"
        - "store/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/store && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-user-job:
  stage: prod-user
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "user/*"
        - "user/*/*"
        - "user/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/user && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

prod-payment-job:
  stage: prod-payment
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "payment/*"
        - "payment/*/*"
        - "payment/*/*/*"
  environment:
    name: production
    url: https://api.collectandverything.fr
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/payment && sudo cp env/.env.production .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d


prod-vitrine-job:
  stage: prod-vitrine
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "vitrine/*"
        - "vitrine/*/*"
        - "vitrine/*/*/*"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/vitrine && sudo echo "CI_COMMIT_BRANCH="$CI_COMMIT_BRANCH | sudo tee -a .env && sudo -E docker compose build --no-cache && sudo -E docker compose up -d


prod-rabbitmq-job:
  stage: prod-rabbitmq
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "rabbitmq/*"
        - "rabbitmq/*/*"
        - "rabbitmq/*/*/*"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/rabbitmq && sudo -E docker compose down && sudo -E docker compose build --no-cache && sudo -E docker compose up -d

proxy-job:
  stage: proxy
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - "proxy/*"
        - "proxy/*/*"
        - "proxy/*/*/*"
  environment:
    name: production
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/proxy && sudo -E docker compose build --no-cache && sudo -E docker compose up -d
  when: manual

proxy-staging-job:
  stage: proxy-staging
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
      changes:
        - "proxy-staging/*"
        - "proxy-staging/*/*"
        - "proxy-staging/*/*/*"
  environment:
    name: production
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/proxy-staging && sudo -E docker compose build --no-cache && sudo -E docker compose up -d
  when: manual


after_script:
  - cd /home/admin/docker.collect.verything && sudo docker image prune --force